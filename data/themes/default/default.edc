
fonts {
   font: "Vera.ttf"   "Edje Vera";
   font: "VeraBd.ttf" "Edje Vera Bold";
}

images {
   image: "wallpaper.png" COMP;
   image: "clock_box.png" COMP;
   image: "settings.png" COMP;
   image: "homebrew.png" COMP;
   image: "device.png" COMP;
   image: "dummy.png" COMP;
   image: "package.png" COMP;
   image: "theme.png" COMP;
   image: "warning.png" COMP;
   image: "quit.png" COMP;
   image: "help.png" COMP;
   image: "update.png" COMP;
}

collections {
   /* the main window group */
   group {
      name: "main";
      min: 640 480;
      max: 1920 1080;
      script {
         public clock_cb(unused) {
            new year, month, day, yearday, weekday, hour, minute;
            new Float:second;
            new buf[13];

            date(year, month, day, yearday, weekday, hour, minute, second);
            snprintf(buf, 10, "%i%i:%i%i", hour/10, hour%10, minute/10, minute%10);
            set_text(PART:"clock", buf);
            // timer resolution
            timer(61.0 - second, "clock_cb", 1);
         }
      }
      parts {
         /* A black background */
         part {
	    name: "background";
	    mouse_events:  0;
	    type:          RECT;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	       color: 0 0 0 255;
	    }
         }
         /* The primary FLHOC window */
         part {
	    name: "FLHOC/primary";
	    mouse_events:  0;
            type: SWALLOW;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.5 0.5;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 0.5 0.5;
		  offset: -1 -1;
	       }
	    }
	    description {
	       state: "shown" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	    }
         }
         /* The primary FLHOC window */
         part {
	    name: "FLHOC/secondary";
	    mouse_events:  0;
            type: SWALLOW;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.5 0.5;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 0.5 0.5;
		  offset: -1 -1;
	       }
	    }
	    description {
	       state: "shown" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	    }
         }
         /* The top-right corner clock */
	 part {
	    name: "clock_bg";
            type: IMAGE;
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.75 0.0;
		  offset: +10 +10;
                  to: "FLHOC/primary";
	       }
	       rel2 {
		  relative: 1.0 0.15;
		  offset: -10 -10;
                  to: "FLHOC/primary";
	       }
               image {
                  normal: "clock_box.png";
               }
	    }
	 }
         part {
            name: "clock_clip";
            type: RECT;
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.15 0.15;
		  offset: 0 0;
                  to: "clock_bg";
	       }
	       rel2 {
		  relative: 0.85 0.85;
		  offset: 0 0;
                  to: "clock_bg";
	       }
	    }
	 }
         part {
	    name: "clock";
            type: TEXT;
            effect: SHADOW;
	    mouse_events: 0;
	    clip_to: "clock_clip";
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.1 0.1;
		  offset: 0 0;
                  to: "clock_clip";
	       }
	       rel2 {
		  relative: 0.9 0.9;
		  offset: 0 0;
                  to: "clock_clip";
	       }
               color: 255 255 255 255;
               color2: 0 0 0 255;
               text {
                  text:        "Hello world!";
                  font:        "Edje Vera";
                  size:         20;
                  fit:          1 1;
               }
	    }
	 }
      }
      programs {
         program {
            name: "init_clock";
            signal: "load";
            source: "";
            script {
               clock_cb(0);
            }
         }
	 program {
	    name: "primary_set";
	    signal: "FLHOC/primary,set";
	    action: STATE_SET "shown" 0.0;
	    transition: ACCELERATE 1.5;
	    target: "FLHOC/primary";
            after: "primary_set_end";
	 }
	 program {
	    name: "primary_set_end";
            action: SIGNAL_EMIT "FLHOC/primary,set,end" "";
         }
	 program {
	    name: "primary_unset";
	    signal: "FLHOC/primary,unset";
	    action: STATE_SET "default" 0.0;
	    transition: ACCELERATE 1.0;
	    target: "FLHOC/primary";
            after: "primary_unset_end";
	 }
	 program {
	    name: "primary_unset_end";
            action: SIGNAL_EMIT "FLHOC/primary,unset,end" "";
         }
	 program {
	    name: "secondary_set";
	    signal: "FLHOC/secondary,set";
	    action: STATE_SET "set" 0.0;
	    transition: ACCELERATE 1.5;
	    target: "FLHOC/secondary";
            after: "secondary_set_end";
	 }
	 program {
	    name: "secondary_set_end";
            action: SIGNAL_EMIT "FLHOC/secondary,set,end" "";
         }

         /* TODO: Add signals for switching from primary to secondary, or for blurring primary */
      }
   }
   /* The XMB Menu window */
   group {
      name: "FLHOC/menu";
      min: 640 480;
      max: 1920 1080;
      data {
         item: "category_next" "Right";
         item: "category_previous" "Left";
         item: "item_next" "Down";
         item: "item_previous" "Up";
      }
      parts {
         part {
	    name: "clip";
	    mouse_events:  0;
	    type:          RECT;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	       //color: 255 255 255 255;
	    }
	 }
         /* TODO: Add clipping and handling fade-in/fade-out of wallpaper,set/unset */
         part {
	    name: "background";
	    mouse_events:  0;
	    type: IMAGE;
            clip_to: "clip";
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.0 -0.1;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.1 1.0;
		  offset: -1 -1;
	       }
	       image {
		  normal: "wallpaper.png";
               }
	    }
         }
         /* Customizable wallpaper */
	 part {
	    name: "FLHOC/menu/wallpaper";
            type: IMAGE;
	    mouse_events: 0;
	    clip_to: "clip";
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	    }
	 }
         /* Creates category with an alpha blended clipping area.
            the default state is used for before the 'ready' signal,
            then set/unset/next/previous for the various states.
         */
#define ADD_CATEGORY(NAME, PREVIOUS_ALPHA, ALPHA, NEXT_ALPHA,           \
                     PREVIOUS_START_POS_X, PREVIOUS_END_POS_X,          \
                     UNSET_START_POS_X, UNSET_END_POS_X,                \
                     SET_START_POS_X, SET_END_POS_X,                    \
                     NEXT_START_POS_X, NEXT_END_POS_X)                  \
         part {                                                         \
            name: "category_clip."NAME;                                 \
            type: RECT;                                                 \
            mouse_events: 0;                                            \
            clip_to: "clip";                                            \
            description {                                               \
               state: "default" 0.0;                                    \
               rel1 {                                                   \
		  relative: 0.0 0.0;                                    \
		  offset: 0 0;                                          \
	       }                                                        \
	       rel2 {                                                   \
                  relative: 1.0 1.0;                                    \
		  offset: -1 -1;                                        \
	       }                                                        \
               color: 255 255 255 ALPHA;                                \
            }                                                           \
            description {                                               \
               state: "set" 0.0;                                        \
               inherit: "default" 0.0;                                  \
            }                                                           \
            description {                                               \
               state: "unset" 0.0;                                      \
               inherit: "default" 0.0;                                  \
            }                                                           \
            description {                                               \
               state: "next" 0.0;                                       \
               inherit: "default" 0.0;                                  \
               color: 255 255 255 NEXT_ALPHA;                           \
            }                                                           \
            description {                                               \
               state: "previous" 0.0;                                   \
               inherit: "default" 0.0;                                  \
               color: 255 255 255 PREVIOUS_ALPHA;                       \
            }                                                           \
         }                                                              \
         part {                                                         \
            name: "FLHOC/menu/category."NAME;                           \
            type: SWALLOW;                                              \
            mouse_events: 0;                                            \
            clip_to: "category_clip."NAME;                              \
            description {                                               \
               state: "default" 0.0;                                    \
               visible: 0;                                              \
               rel1 {                                                   \
                  relative: SET_START_POS_X -0.5;                       \
                  offset: 0 0;                                          \
               }                                                        \
               rel2 {                                                   \
                  relative: SET_END_POS_X 0.0;                          \
                  offset: -1 -1;                                        \
               }                                                        \
            }                                                           \
            description {                                               \
               state: "unset" 0.0;                                      \
               inherit: "default" 0.0;                                  \
               visible: 0;                                              \
               rel1 {                                                   \
                  relative: UNSET_START_POS_X 0.05;                     \
                  offset: 5 0;                                          \
               }                                                        \
               rel2 {                                                   \
                  relative: UNSET_END_POS_X 0.95;                       \
                  offset: -5 -1;                                        \
               }                                                        \
            }                                                           \
            description {                                               \
               state: "set" 0.0;                                        \
               inherit: "default" 0.0;                                  \
               visible: 1;                                              \
               rel1 {                                                   \
                  relative: SET_START_POS_X 0.05;                       \
		  offset: 5 0;                                          \
	       }                                                        \
	       rel2 {                                                   \
                  relative: SET_END_POS_X 0.95;                         \
		  offset: -5 -1;                                        \
	       }                                                        \
            }                                                           \
            description {                                               \
               state: "previous" 0.0;                                   \
               inherit: "default" 0.0;                                  \
               visible: 1;                                              \
               rel1 {                                                   \
                  relative: PREVIOUS_START_POS_X 0.05;                  \
		  offset: 5 0;                                          \
	       }                                                        \
	       rel2 {                                                   \
                  relative: PREVIOUS_END_POS_X 0.95;                    \
		  offset: -5 -1;                                        \
	       }                                                        \
            }                                                           \
            description {                                               \
               state: "next" 0.0;                                       \
               inherit: "default" 0.0;                                  \
               visible: 1;                                              \
               rel1 {                                                   \
                  relative: NEXT_START_POS_X 0.05;                      \
		  offset: 5 0;                                          \
	       }                                                        \
	       rel2 {                                                   \
                  relative: NEXT_END_POS_X 0.95;                        \
		  offset: -5 -1;                                        \
	       }                                                        \
            }                                                           \
         }
         /* Create 2 categories before, and 4 after the selected category.
            The ones on the side (before_2 and after_5) have no size and are
            only used for the next/previous animations
         */
         ADD_CATEGORY("before_2", 0, 50, 100,
                      0.05, 0.05,
                      0.05, 0.05, 0.05, 0.05,
                      0.05, 0.15);
         ADD_CATEGORY("before_1", 50, 100, 150,
                      0.05, 0.05,
                      0.15, 0.15, 0.05, 0.15,
                      0.15, 0.25);
         ADD_CATEGORY("before_0", 100, 150, 255,
                      0.05, 0.15,
                      0.25, 0.25, 0.15, 0.25,
                      0.25, 0.45);
         ADD_CATEGORY("selection", 150, 255, 150,
                      0.15, 0.25,
                      0.35, 0.35, 0.25, 0.45,
                      0.45, 0.55);
         ADD_CATEGORY("after_0", 255, 150, 100,
                      0.25, 0.45,
                      0.45, 0.45, 0.45, 0.55,
                      0.55, 0.65);
         ADD_CATEGORY("after_1", 150, 100, 75,
                      0.45, 0.55,
                      0.55, 0.55, 0.55, 0.65,
                      0.65, 0.75);
         ADD_CATEGORY("after_2", 100, 75, 50,
                      0.55, 0.65,
                      0.65, 0.65, 0.65, 0.75,
                      0.75, 0.85);
         ADD_CATEGORY("after_3", 75, 50, 25,
                      0.65, 0.75,
                      0.75, 0.75, 0.75, 0.85,
                      0.85, 0.95);
         ADD_CATEGORY("after_4", 50, 25, 0,
                      0.75, 0.85,
                      0.85, 0.85, 0.85, 0.95,
                      0.95, 0.95);
         ADD_CATEGORY("after_5", 25, 0, 0,
                      0.85, 0.95,
                      0.95, 0.95, 0.95, 0.95,
                      0.95, 0.95);
      }

      programs {
#define TARGET_ALL_CATEGORIES                                           \
         target: "FLHOC/menu/category.before_2";                        \
         target: "category_clip.before_2";                              \
         target: "FLHOC/menu/category.before_1";                        \
         target: "category_clip.before_1";                              \
         target: "FLHOC/menu/category.before_0";                        \
         target: "category_clip.before_0";                              \
         target: "FLHOC/menu/category.selection";                       \
         target: "category_clip.selection";                             \
         target: "FLHOC/menu/category.after_0";                         \
         target: "category_clip.after_0";                               \
         target: "FLHOC/menu/category.after_1";                         \
         target: "category_clip.after_1";                               \
         target: "FLHOC/menu/category.after_2";                         \
         target: "category_clip.after_2";                               \
         target: "FLHOC/menu/category.after_3";                         \
         target: "category_clip.after_3";                               \
         target: "FLHOC/menu/category.after_4";                         \
         target: "category_clip.after_4";                               \
         target: "FLHOC/menu/category.after_5";                         \
         target: "category_clip.after_5";
         
         program {
            name: "init";
            signal: "FLHOC/menu,init";
            action: STATE_SET "set" 0.0;
            transition: BOUNCE 1.5 3.0 4.0;
            TARGET_ALL_CATEGORIES;
            after: "ready";
         }
         program {
            name: "ready";
            action: SIGNAL_EMIT "FLHOC/menu,ready" "";
         }
#define ADD_CATEGORY_SET_UNSET_PROGRAM(NAME)                            \
         program {                                                      \
            name: "set,"NAME;                                           \
            signal: "FLHOC/menu,category_set";                          \
            source: NAME;                                               \
            action: STATE_SET "set" 0.0;                                \
            transition: ACCELERATE 1.0;                                 \
            target: "FLHOC/menu/category."NAME;                         \
            after: "send_set,"NAME",end";                               \
         }                                                              \
         program {                                                      \
            name: "unset,"NAME;                                         \
            signal: "FLHOC/menu,category_unset";                        \
            source: NAME;                                               \
            action: STATE_SET "unset" 0.0;                              \
            transition: ACCELERATE 1.0;                                 \
            target: "FLHOC/menu/category."NAME;                         \
            after: "send_unset,"NAME",end";                             \
         }                                                              \
         program {                                                      \
            name: "set,"NAME",reset";                                   \
            signal: "FLHOC/menu,category_set,reset";                    \
            source: NAME;                                               \
            action: STATE_SET "set" 0.0;                                \
            transition: LINEAR 0.0;                                     \
            target: "FLHOC/menu/category."NAME;                         \
         }                                                              \
         program {                                                      \
            name: "unset,"NAME",reset";                                 \
            signal: "FLHOC/menu,category_unset,reset";                  \
            source: NAME;                                               \
            action: STATE_SET "unset" 0.0;                              \
            transition: LINEAR 0.0;                                     \
            target: "FLHOC/menu/category."NAME;                         \
         }                                                              \
         program {                                                      \
            name: "send_set,"NAME",end";                                \
            action: SIGNAL_EMIT "FLHOC/menu,category_set,end" NAME;     \
         }                                                              \
         program {                                                      \
            name: "send_unset,"NAME",end";                              \
            action: SIGNAL_EMIT "FLHOC/menu,category_unset,end" NAME;   \
         }
         ADD_CATEGORY_SET_UNSET_PROGRAM("before_2");
         ADD_CATEGORY_SET_UNSET_PROGRAM("before_1");
         ADD_CATEGORY_SET_UNSET_PROGRAM("before_0");
         ADD_CATEGORY_SET_UNSET_PROGRAM("selection");
         ADD_CATEGORY_SET_UNSET_PROGRAM("after_0");
         ADD_CATEGORY_SET_UNSET_PROGRAM("after_1");
         ADD_CATEGORY_SET_UNSET_PROGRAM("after_2");
         ADD_CATEGORY_SET_UNSET_PROGRAM("after_3");
         ADD_CATEGORY_SET_UNSET_PROGRAM("after_4");
         ADD_CATEGORY_SET_UNSET_PROGRAM("after_5");

         /* Scrolling left means all parts must go to the right */
         program {
            name: "scroll_left";
            signal: "FLHOC/menu,category_previous";
            action: STATE_SET "next" 0.0;
            transition: SINUSOIDAL 0.5;
            TARGET_ALL_CATEGORIES;
            after: "scroll_left_end";
         }
         /* Scrolling right means all parts must go to the left */
         program {
            name: "scroll_right";
            signal: "FLHOC/menu,category_next";
            action: STATE_SET "previous" 0.0;
            transition: SINUSOIDAL 0.5;
            TARGET_ALL_CATEGORIES;
            after: "scroll_right_end";
         }
         program {
            name: "reset";
            signal: "FLHOC/menu,category_reset";
            action: STATE_SET "set" 0.0;
            transition: LINEAR 0.0;
            TARGET_ALL_CATEGORIES;
         }
         program {
            name: "scroll_left_end";
            action: SIGNAL_EMIT "FLHOC/menu,category_previous,end" "";
         }
         program {
            name: "scroll_right_end";
            action: SIGNAL_EMIT "FLHOC/menu,category_next,end" "";
         }
      }
   }

   group {
      name: "FLHOC/menu/category";
      parts {
	 part {
	    name: "clip";
            type: RECT;
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
                  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
                  offset: -1 -1;
	       }
               //color: 255 0 0 255;
	    }
         }

         /* Set the clip and swallow size to 3.75 times the category.
            The selected one has a size of 0.20 and is positioned at 0.25
            so to have the item fit the whole screen : 
            0.20 * 3.75 = 0.75 + 0.25 == 1.00
         */
#define ADD_ITEM(NAME, NEXT_ALPHA, ALPHA, PREVIOUS_ALPHA,               \
                 NEXT_START_POS_Y, NEXT_END_POS_Y,                      \
                 UNSET_START_POS_Y, UNSET_END_POS_Y,                    \
                 SET_START_POS_Y, SET_END_POS_Y,                        \
                 PREVIOUS_START_POS_Y, PREVIOUS_END_POS_Y)              \
         part {                                                         \
            name: "item_clip."NAME;                                     \
            type: RECT;                                                 \
            mouse_events: 0;                                            \
            description {                                               \
               state: "default" 0.0;                                    \
               rel1 {                                                   \
		  relative: 0.0 0.0;                                    \
		  offset: 0 0;                                          \
	       }                                                        \
	       rel2 {                                                   \
                  relative: 3.75 1.0;                                   \
		  offset: -1 -1;                                        \
	       }                                                        \
               color: 255 255 255 ALPHA;                                \
            }                                                           \
            description {                                               \
               state: "set" 0.0;                                        \
               inherit: "default" 0.0;                                  \
            }                                                           \
            description {                                               \
               state: "unset" 0.0;                                      \
               inherit: "default" 0.0;                                  \
            }                                                           \
            description {                                               \
               state: "next" 0.0;                                       \
               inherit: "default" 0.0;                                  \
               color: 255 255 255 NEXT_ALPHA;                           \
            }                                                           \
            description {                                               \
               state: "previous" 0.0;                                   \
               inherit: "default" 0.0;                                  \
               color: 255 255 255 PREVIOUS_ALPHA;                       \
            }                                                           \
         }                                                              \
         part {                                                         \
            name: "FLHOC/menu/category/item."NAME;                               \
            type: SWALLOW;                                              \
            mouse_events: 0;                                            \
            clip_to: "item_clip."NAME;                                  \
            description {                                               \
               state: "default" 0.0;                                    \
               visible: 0;                                              \
               rel1 {                                                   \
                  relative: 0.0 0.2;                                    \
                  offset: 0 0;                                          \
                  to_x: "item_clip".NAME;                               \
               }                                                        \
               rel2 {                                                   \
                  relative: 1.0 0.2;                                    \
                  offset: -1 -1;                                        \
                  to_x: "item_clip".NAME;                               \
               }                                                        \
            }                                                           \
            description {                                               \
               state: "unset" 0.0;                                      \
               visible: 0;                                              \
               rel1 {                                                   \
                  relative: 0.0 UNSET_START_POS_Y;                      \
                  offset: 0 5;                                          \
                  to_x: "item_clip".NAME;                               \
               }                                                        \
               rel2 {                                                   \
                  relative: 1.0 UNSET_END_POS_Y;                        \
                  offset: -1 -5;                                        \
                  to_x: "item_clip".NAME;                               \
               }                                                        \
            }                                                           \
            description {                                               \
               state: "set" 0.0;                                        \
               inherit: "default" 0.0;                                  \
               visible: 1;                                              \
               rel1 {                                                   \
                  relative: 0.0 SET_START_POS_Y;                        \
		  offset: 0 5;                                          \
                  to_x: "item_clip".NAME;                               \
	       }                                                        \
	       rel2 {                                                   \
                  relative: 1.0 SET_END_POS_Y;                          \
		  offset: -1 -5;                                        \
                  to_x: "item_clip".NAME;                               \
	       }                                                        \
            }                                                           \
            description {                                               \
               state: "previous" 0.0;                                   \
               rel1 {                                                   \
                  relative: 0.0 PREVIOUS_START_POS_Y;                   \
		  offset: 0 5;                                          \
                  to_x: "item_clip".NAME;                               \
	       }                                                        \
	       rel2 {                                                   \
                  relative: 1.0 PREVIOUS_END_POS_Y;                     \
		  offset: -1 -5;                                        \
                  to_x: "item_clip".NAME;                               \
	       }                                                        \
            }                                                           \
            description {                                               \
               state: "next" 0.0;                                       \
               rel1 {                                                   \
                  relative: 0.0 NEXT_START_POS_Y;                       \
		  offset: 0 5;                                          \
                  to_x: "item_clip".NAME;                               \
	       }                                                        \
	       rel2 {                                                   \
                  relative: 1.0 NEXT_END_POS_Y;                         \
		  offset: -1 -5;                                        \
                  to_x: "item_clip".NAME;                               \
	       }                                                        \
            }                                                           \
         }
         ADD_ITEM("before_2", 0, 0, 50,
                  0.00, 0.00,
                  0.00, 0.00, 0.00, 0.00, /* 0 */
                  0.00, 0.04);
         ADD_ITEM("before_1", 0, 50, 100,
                  0.00, 0.00,
                  0.04, 0.04, 0.00, 0.04, /* 4 */
                  0.04, 0.10);
         ADD_ITEM("before_0", 50, 100, 255,
                  0.00, 0.04,
                  0.10, 0.10, 0.04, 0.10, /* 6 */
                  0.35, 0.55);
         ADD_ITEM("selection", 100, 255, 150,
                  0.04, 0.10,
                  0.35, 0.35, 0.35, 0.55, /* 20 */
                  0.55, 0.69);
         ADD_ITEM("after_0", 255, 150, 100,
                  0.35, 0.55,
                  0.55, 0.55, 0.55, 0.69, /* 14 */
                  0.69, 0.81);
         ADD_ITEM("after_1", 150, 100, 75,
                  0.55, 0.69,
                  0.69, 0.69, 0.69, 0.81, /* 12 */
                  0.81, 0.90);
         ADD_ITEM("after_2", 100, 75, 50,
                  0.69, 0.81,
                  0.81, 0.81, 0.81, 0.90, /* 9 */
                  0.90, 0.96);
         ADD_ITEM("after_3", 75, 50, 25,
                  0.81, 0.90,
                  0.90, 0.90, 0.90, 0.96, /* 6 */
                  0.96, 1.00);
         ADD_ITEM("after_4", 50, 25, 0,
                  0.90, 0.96,
                  0.96, 0.96, 0.96, 1.00, /* 4 */
                  1.00, 1.00);
         ADD_ITEM("after_5", 25, 0, 0,
                  0.96, 1.00,
                  1.00, 1.00, 1.00, 1.00, /* 0 */
                  1.00, 1.00);

	 part {
	    name: "icon";
            type: IMAGE;
	    mouse_events: 0;
            clip_to: "clip";
	    description {
	       state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
	       rel1 {
		  relative: 0.0 0.10;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.20;
		  offset: -1 -1;
	       }
               image {
                  normal: "dummy.png";
               }
	    }
	    description {
	       state: "selected" 0.0;
               inherit: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.10;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.30;
		  offset: -1 -1;
	       }
	    }
	 }
	 part {
	    name: "name";
            type: TEXT;
            effect: SHADOW;
	    mouse_events: 0;
            clip_to: "clip";
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.25;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.30;
		  offset: -1 -1;
	       }
               color: 255 255 255 255;
               color2: 0 0 0 255;
               text {
                  font:        "Edje Vera";
                  size:         20;
                  fit:          1 1;
               }
	    }
	    description {
	       state: "selected" 0.0;
               inherit: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.30;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.35;
		  offset: -1 -1;
	       }
               text {
                  font:        "Edje Vera Bold";
               }
            }
	 }
      }
      programs {
#define TARGET_ALL_ITEMS                                                \
         target: "FLHOC/menu/category/item.before_2";                   \
         target: "item_clip.before_2";                                  \
         target: "FLHOC/menu/category/item.before_1";                   \
         target: "item_clip.before_1";                                  \
         target: "FLHOC/menu/category/item.before_0";                   \
         target: "item_clip.before_0";                                  \
         target: "FLHOC/menu/category/item.selection";                  \
         target: "item_clip.selection";                                 \
         target: "FLHOC/menu/category/item.after_0";                    \
         target: "item_clip.after_0";                                   \
         target: "FLHOC/menu/category/item.after_1";                    \
         target: "item_clip.after_1";                                   \
         target: "FLHOC/menu/category/item.after_2";                    \
         target: "item_clip.after_2";                                   \
         target: "FLHOC/menu/category/item.after_3";                    \
         target: "item_clip.after_3";                                   \
         target: "FLHOC/menu/category/item.after_4";                    \
         target: "item_clip.after_4";                                   \
         target: "FLHOC/menu/category/item.after_5";                    \
         target: "item_clip.after_5";

         program {
            name: "category_selected";
	    signal: "FLHOC/menu/category,selected";
            action: STATE_SET "selected" 0.0;
            transition: LINEAR 0.5;
            target: "icon";
            target: "name";
         }
         program {
            name: "show_items";
	    signal: "FLHOC/menu/category,selected";
            action: STATE_SET "set" 0.0;
            transition: LINEAR 0.5;
            TARGET_ALL_ITEMS;
         }
         program {
            name: "category_deselected";
	    signal: "FLHOC/menu/category,deselected";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            target: "icon";
            target: "name";
         }
         program {
            name: "hide_items";
	    signal: "FLHOC/menu/category,deselected";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            TARGET_ALL_ITEMS;
         }

#define ADD_ITEM_SET_UNSET_PROGRAM(NAME)                                \
         program {                                                      \
            name: "set,"NAME;                                           \
            signal: "FLHOC/menu/category,item_set";                     \
            source: NAME;                                               \
            action: STATE_SET "set" 0.0;                                \
            transition: ACCELERATE 1.0;                                 \
            target: "FLHOC/menu/category/item."NAME;                    \
            after: "send_set,"NAME",end";                               \
         }                                                              \
         program {                                                      \
            name: "unset,"NAME;                                         \
            signal: "FLHOC/menu/category,item_unset";                   \
            source: NAME;                                               \
            action: STATE_SET "unset" 0.0;                              \
            transition: ACCELERATE 1.0;                                 \
            target: "FLHOC/menu/category/item."NAME;                    \
            after: "send_unset,"NAME",end";                             \
         }                                                              \
         program {                                                      \
            name: "set,"NAME",reset";                                   \
            signal: "FLHOC/menu/category,item_set,reset";               \
            source: NAME;                                               \
            action: STATE_SET "set" 0.0;                                \
            transition: LINEAR 0.0;                                     \
            target: "FLHOC/menu/category/item."NAME;                    \
         }                                                              \
         program {                                                      \
            name: "unset,"NAME",reset";                                 \
            signal: "FLHOC/menu/category,item_unset,reset";             \
            source: NAME;                                               \
            action: STATE_SET "unset" 0.0;                              \
            transition: LINEAR 0.0;                                     \
            target: "FLHOC/menu/category/item."NAME;                    \
         }                                                              \
         program {                                                      \
            name: "send_set,"NAME",end";                                \
            action: SIGNAL_EMIT "FLHOC/menu/category,item_set,end" NAME; \
         }                                                              \
         program {                                                      \
            name: "send_unset,"NAME",end";                              \
            action: SIGNAL_EMIT "FLHOC/menu/category,item_unset,end" NAME; \
         }
         ADD_ITEM_SET_UNSET_PROGRAM("before_2");
         ADD_ITEM_SET_UNSET_PROGRAM("before_1");
         ADD_ITEM_SET_UNSET_PROGRAM("before_0");
         ADD_ITEM_SET_UNSET_PROGRAM("selection");
         ADD_ITEM_SET_UNSET_PROGRAM("after_0");
         ADD_ITEM_SET_UNSET_PROGRAM("after_1");
         ADD_ITEM_SET_UNSET_PROGRAM("after_2");
         ADD_ITEM_SET_UNSET_PROGRAM("after_3");
         ADD_ITEM_SET_UNSET_PROGRAM("after_4");
         ADD_ITEM_SET_UNSET_PROGRAM("after_5");

         program {
            name: "scroll_up";
            signal: "FLHOC/menu/category,item_previous";
            action: STATE_SET "previous" 0.0;
            transition: SINUSOIDAL 0.5;
            TARGET_ALL_ITEMS;
            after: "scroll_up_end";
         }
         program {
            name: "scroll_down";
            signal: "FLHOC/menu/category,item_next";
            action: STATE_SET "next" 0.0;
            transition: SINUSOIDAL 0.5;
            TARGET_ALL_ITEMS;
            after: "scroll_down_end";
         }
         program {
            name: "reset";
            signal: "FLHOC/menu/category,item_reset";
            action: STATE_SET "set" 0.0;
            transition: LINEAR 0.0;
            TARGET_ALL_ITEMS;
         }
         program {
            name: "scroll_up_end";
            action: SIGNAL_EMIT "FLHOC/menu/category,item_previous,end" "";
         }
         program {
            name: "scroll_down_end";
            action: SIGNAL_EMIT "FLHOC/menu/category,item_next,end" "";
         }
      }
   }
#define DEFINE_CATEGORY(NAME, IMAGE, TEXT)                              \
   group {                                                              \
      name: "FLHOC/menu/category/"NAME;                                 \
      inherit: "FLHOC/menu/category";                                   \
      parts {                                                           \
	 part {                                                         \
            name: "icon";                                               \
            description {                                               \
               state: "default" 0.0;                                    \
               image {                                                  \
		  normal: IMAGE;                                        \
	       }                                                        \
            }                                                           \
            description {                                               \
               state: "selected" 0.0;                                   \
               image {                                                  \
		  normal: IMAGE;                                        \
	       }                                                        \
            }                                                           \
         }                                                              \
	 part {                                                         \
            name: "name";                                               \
            description {                                               \
               state: "default" 0.0;                                    \
               text {                                                   \
                  text: TEXT;                                           \
               }                                                        \
            }                                                           \
            description {                                               \
               state: "selected" 0.0;                                   \
               text {                                                   \
                  text: TEXT;                                           \
               }                                                        \
            }                                                           \
         }                                                              \
      }                                                                 \
   }
   DEFINE_CATEGORY("settings", "settings.png", "Settings");
   DEFINE_CATEGORY("homebrew", "homebrew.png", "Homebrew");
   DEFINE_CATEGORY("device_packages", "device.png", "USB Packages");
   DEFINE_CATEGORY("device_homebrew", "device.png", "USB Homebrew");
   DEFINE_CATEGORY("theme", "theme.png", "Theme");
   DEFINE_CATEGORY("quit", "quit.png", "Quit");
   DEFINE_CATEGORY("update", "update.png", "Update Homebrew Center");


   group {
      name: "FLHOC/menu/item";
      parts {
	 part {
	    name: "clip";
            type: RECT;
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
                  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
                  offset: -1 -1;
	       }
               //color: 255 0 0 255;
	    }
         }
	 part {
	    name: "FLHOC/menu/item/icon";
            type: IMAGE;
	    mouse_events: 0;
            clip_to: "clip";
	    description {
	       state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 0.25 1.0;
		  offset: -1 -1;
	       }
	       image {
		  normal: "dummy.png";
	       }
	    }
	    description {
	       state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 0.25 1.0;
		  offset: 4 4;
	       }
	    }
	 }
	 part {
	    name: "FLHOC/menu/item/title";
            type: TEXT;
            effect: SHADOW;
	    mouse_events: 0;
            clip_to: "clip";
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 25 0;
                  to: "FLHOC/menu/item/icon";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
                  to: "clip";
	       }
               color: 255 255 255 255;
               color2: 0 0 0 255;
               text {
                  text: "Homebrew Game!!";
                  font: "Edje Vera";
                  size_range: 10 35;
                  size: 20;
                  align: 0.0 0.5;
                  fit: 1 1;
               }
	    }
	    description {
	       state: "selected" 0.0;
               inherit: "default" 0.0;
	       rel1 {
		  relative: 0.30 0.0;
                  to: "";
                  offset: 25 0;
               }
            }
	 }
      }
      programs {
	 program {
	    name: "selected";
            signal : "FLHOC/menu/item,selected";
	    action: STATE_SET "selected" 0.0;
	    transition: SINUSOIDAL 0.5;
	    target: "FLHOC/menu/item/icon";
	    target: "FLHOC/menu/item/title";
            after: "pulse";
	 }
	 program {
	    name: "pulse";
	    action: STATE_SET "default" 0.0;
	    transition: SINUSOIDAL 0.5;
	    target: "FLHOC/menu/item/icon";
            after: "selected";
	 }
	 program {
	    name: "deselected";
            signal : "FLHOC/menu/item,deselected";
	    action: STATE_SET "default" 0.0;
	    transition: SINUSOIDAL 0.5;
	    target: "FLHOC/menu/item/icon";
	    target: "FLHOC/menu/item/title";
            after: "stop_pulse";
	 }
	 program {
	    name: "stop_pulse";
	    action: ACTION_STOP;
	    target: "pulse";
	 }
      }
   }
/* TODO: Add specific settings items and secondary screens */
}
